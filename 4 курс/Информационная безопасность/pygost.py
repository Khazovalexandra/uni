from pygost import gost3410

# 34.10.01
private_key = bytes(bytearray((
 0x7A, 0x92, 0x9A, 0xDE, 0x78, 0x9B, 0xB9, 0xBE,
 0x10, 0xED, 0x35, 0x9D, 0xD3, 0x9A, 0x72, 0xC1,
 0x1B, 0x60, 0x96, 0x1F, 0x49, 0x39, 0x7E, 0xEE,
 0x1D, 0x19, 0xCE, 0x98, 0x91, 0xEC, 0x3B, 0x28
)))
public_key_x = bytes(bytearray((
 0x7F, 0x2B, 0x49, 0xE2, 0x70, 0xDB, 0x6D, 0x90,
 0xD8, 0x59, 0x5B, 0xEC, 0x45, 0x8B, 0x50, 0xC5,
 0x85, 0x85, 0xBA, 0x1D, 0x4E, 0x9B, 0x78, 0x8F, 
 0x66, 0x89, 0xDB, 0xD8, 0xE5, 0x6F, 0xD8, 0x0B
)))
public_key_y = bytes(bytearray((
 0x26, 0xF1, 0xB4, 0x89, 0xD6, 0x70, 0x1D, 0xD1,
 0x85, 0xC8, 0x41, 0x3A, 0x97, 0x7B, 0x3C, 0xBB,
 0xAF, 0x64, 0xD1, 0xC5, 0x93, 0xD2, 0x66, 0x27,
 0xDF, 0xFB, 0x10, 0x1A, 0x87, 0xFF, 0x77, 0xDA
)))
digest = bytes(bytearray((
 0x2D, 0xFB, 0xC1, 0xB3, 0x72, 0xD8, 0x9A, 0x11,
 0x88, 0xC0, 0x9C, 0x52, 0xE0, 0xEE, 0xC6, 0x1F,
 0xCE, 0x52, 0x03, 0x2A, 0xB1, 0x02, 0x2E, 0x8E,
 0x67, 0xEC, 0xE6, 0x67, 0x2B, 0x04, 0x3E, 0xE5
)))
signature = bytes(bytearray((
 0x41, 0xAA, 0x28, 0xD2, 0xF1, 0xAB, 0x14, 0x82,
 0x80, 0xCD, 0x9E, 0xD5, 0x6F, 0xED, 0xA4, 0x19,
 0x74, 0x05, 0x35, 0x54, 0xA4, 0x27, 0x67, 0xB8,
 0x3A, 0xD0, 0x43, 0xFD, 0x39, 0xDC, 0x04, 0x93,
 0x01, 0x45, 0x6C, 0x64, 0xBA, 0x46, 0x42, 0xA1,
 0x65, 0x3C, 0x23, 0x5A, 0x98, 0xA6, 0x02, 0x49,
 0xBC, 0xD6, 0xD3, 0xF7, 0x46, 0xB6, 0x31, 0xDF,
 0x92, 0x80, 0x14, 0xF6, 0xC5, 0xBF, 0x9C, 0x40
)))
private_key = utils.bytes2long(private_key)
signature = signature[32:] + signature[:32]
c = gost3410.GOST3410Curve(*gost3410.CURVE_PARAMS["GostR3410_2001_TestParamSet"])
46
pubX, pubY = gost3410.public_key(c, private_key)
print("pubX = ", pubX)
print("pubY = ", pubY)
print()
assert gost3410.long2bytes(pubX) == public_key_x
print ("long2bytes(pubX) == public_key_x")
print (gost3410.long2bytes(pubX), " == ", public_key_x)
print (gost3410.long2bytes(pubX) == public_key_x)
print()
assert utils.long2bytes(pubY) == public_key_y
print ("long2bytes(pubY) == public_key_y")
print (gost3410.long2bytes(pubY)," == ", public_key_y)
print (gost3410.long2bytes(pubY) == public_key_y)
print()
s = gost3410.sign(c, private_key, digest)
print ("signature = ", s)
print ("Verify digest with pubX, pubY and -generated- sign = ", gost3410.verify(c, pubX, pubY, digest, s))
print ("Verify digest with pubX, pubY and -known- sign = ", gost3410.verify(c, pubX, pubY, digest, signature) )